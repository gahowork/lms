CREATE TABLE adventures (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(255) NOT NULL,
	CONSTRAINT pk_adventures PRIMARY KEY (id)
);

CREATE TABLE adventurequestions (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	adventure_id INT NOT NULL,
	question_id INT NOT NULL,
	CONSTRAINT pk_adventurequestions PRIMARY KEY (id)
);

CREATE TABLE answers (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(255) NOT NULL,
	CONSTRAINT pk_answers PRIMARY KEY (id)
);

CREATE TABLE answerpictures (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	answer_id INT NOT NULL,
	picture_id INT NOT NULL,
	CONSTRAINT pk_answerpictures PRIMARY KEY (id)
);

CREATE TABLE categories (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(50) NOT NULL,
	picture_id INT NOT NULL,
	CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE games (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	user_id INT NOT NULL,
	CONSTRAINT pk_games PRIMARY KEY (id)
);

CREATE TABLE gamehistories (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	game_id INT NOT NULL,
	questionanswers_id INT NOT NULL,
	CONSTRAINT pk_gamehistories PRIMARY KEY (id)
);

CREATE TABLE levels (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(50) NOT NULL,
	picture_id INT NOT NULL,
	levelpoints INT NOT NULL,
	leveltarget INT NOT NULL,
	CONSTRAINT pk_levels PRIMARY KEY (id)
);

CREATE TABLE pictures (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(50) NOT NULL,
	image BLOB NOT NULL,
	CONSTRAINT pk_pictures PRIMARY KEY (id)
);

CREATE TABLE questions (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	header VARCHAR(50) NOT NULL,
	description VARCHAR(255) NOT NULL,
	questiontype_id INT NOT NULL,
	CONSTRAINT pk_questions PRIMARY KEY (id)
);

CREATE TABLE questionanswers (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	question_id INT NOT NULL,
	answer_id INT NOT NULL,
	result BIT NOT NULL,
	CONSTRAINT pk_questionanswers PRIMARY KEY (id)
);

CREATE TABLE questioncategories (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	question_id INT NOT NULL,
	category_id INT NOT NULL,
	CONSTRAINT pk_questioncategories PRIMARY KEY (id)
);

CREATE TABLE questionlevels (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	question_id INT NOT NULL,
	level_id INT NOT NULL,
	CONSTRAINT pk_questionlevels PRIMARY KEY (id)
);

CREATE TABLE questionpictures (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	question_id INT NOT NULL,
	picture_id INT NOT NULL,
	CONSTRAINT pk_questionpictures PRIMARY KEY (id)
);

CREATE TABLE questiontypes (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(50) NOT NULL,
	CONSTRAINT pk_questiontypes PRIMARY KEY (id)
);

CREATE TABLE users (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	usergroup_id INT NOT NULL,
	CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE usergroups (
	id INT NOT NULL AUTO_INCREMENT,
	created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	description VARCHAR(50) NOT NULL,
	CONSTRAINT pk_usergroups PRIMARY KEY (id)
);

delimiter //
CREATE VIEW getrandomquestionid
AS
SELECT
	q.id
FROM questions AS q
ORDER BY rand()
LIMIT 1
//
